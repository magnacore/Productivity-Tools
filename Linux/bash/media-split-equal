#!/usr/bin/bash

split_duration_seconds=${1:-300}
threashold_seconds=${2:-600}

GREEN='\033[0;32m'
NC='\033[0m' # No Color

LARGEST=$(for i in *.m*
	do ffmpeg -i "$i" 2>&1 | grep -oP "(?<=Duration: ).*(?=, start.*)"
done | sort -r | head -n 1)

LARGEST_SECONDS=$(echo $LARGEST | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')

if [ ${LARGEST_SECONDS%.*} -gt $threashold_seconds ]
then
	echo -e "${GREEN}Long media found: $LARGEST Splitting...${NC}"

	for i in *.m*	
	do 
		duration_seconds=$(ffmpeg -i "$i" 2>&1 | grep -oP "(?<=Duration: ).*(?=, start.*)" | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }' | awk '{print int($1)}')
		parts=$(($duration_seconds/$split_duration_seconds))		

		if [ $parts != 0 ]
		then
			remaining=$(($duration_seconds%$split_duration_seconds))
			excess=$(echo "scale=2; $remaining/$parts" | bc | awk '{print int($1+0.5)}')
			split_duration=$(($split_duration_seconds+$excess))
			echo -e "${GREEN}Splitting for ${split_duration} seconds...${NC}"
			i="${i%}" mkvmerge -o "SPLIT/$i" "$i" --split duration:"${split_duration}s"

		else
			i="${i%}" mkvmerge -o "SPLIT/$i" "$i" --split duration:"${split_duration_seconds}s"
		fi
		
	done

	for filename in SPLIT/*
	do
		name=$(basename -- "$filename")
		name="${name%.*}"
		mv "$filename" "SPLIT/${name}_SPLIT_EQUAL.mkv"
	done

	echo -e "${GREEN}Long media found: $LARGEST. Finished Splitting.${NC}"
else
	echo "Nothing to split...exiting."
fi
