#!/home/manuj/anaconda3/envs/xonsh/bin/xonsh

# Usage: audio-convert-ogg 128 *
# Converts all audio files in a folder to 128kbps ogg
# https://en.wikipedia.org/wiki/Ogg
# https://en.wikipedia.org/wiki/Opus_(audio_format)
# https://ffmpeg.org/ffmpeg-codecs.html#libopus-1
# https://opus-codec.org/
#
# OPUS Features :
# Bitrates from 6 kb/s to 510 kb/s
# Sampling rates from 8 kHz (narrowband) to 48 kHz (fullband)
# Support for both constant bitrate (CBR) and variable bitrate (VBR)
# Support for speech and music
# Support for mono and stereo

import os
from rich.progress import track
from rich.console import Console
from rich import print

import sys
sys.path.append("/home/manuj/Bin")

from utilities import get_mime, get_filename_extension, set_valid_file_names

console = Console()

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) >= 3:
	selection = True

if selection:
	allFiles = sys.argv[2:]
	bitrate = int(sys.argv[1])
	allFiles.sort()

	console.rule(f"[bold cyan]Converting audio to {bitrate}kbps variable bitrate ogg...", style="cyan")

	clean_file_names = set_valid_file_names(allFiles)

	for file in track(clean_file_names, description="[bold cyan]Converting : [/bold cyan]"):
		mimestart = get_mime(file)

		if mimestart != None:
			if mimestart in ['audio']:
				filename, _ = get_filename_extension(file)
				filename = filename +'.oga'

				print(f"[green]{filename}")

				if !(ffmpeg -i @(file) -c:a libopus -b:a @(bitrate)k -vn -vbr on f"{filename}"):
					None
				else:
					print(f"[bold red]Unable to convert {file}[/bold red]")
					sound-play-fail &

	sound-play-success &
else:
	console.print("No files selected!", style="bold red")
	sound-play-fail &

console.rule(style="cyan")
