#!/home/manuj/anaconda3/envs/xonsh/bin/xonsh

# Usage: audio-convert-ogg 128 *
# Converts all audio files in a folder to 128kbps ogg
# Quality Guide
# -q0 	64 kbit/s
# -q1 	80 kbit/s
# -q2 	96 kbit/s
# -q3 	112 kbit/s
# -q4 	128 kbit/s
# -q5 	160 kbit/s
# -q6 	192 kbit/s
# -q7 	224 kbit/s
# -q8 	256 kbit/s
# -q9 	320 kbit/s
# -q10 	500 kbit/s



import os
import ast
from rich.progress import track
from rich.console import Console
from rich import print

import sys
sys.path.append("/home/manuj/Bin")

from utilities import get_mime, get_filename_extension

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) > 3:
	selection = True

if selection:
	allFiles = sys.argv[2:]
	bitrate = int(sys.argv[1])
	allFiles.sort()

	console = Console()

	console.rule(f"[bold cyan]Converting audio to {bitrate}kbps variable bitrate ogg...", style="cyan")

	clean_file_names = $(file-rename-valid @(allFiles))
	clean_file_names = ast.literal_eval(clean_file_names)

	for file in track(clean_file_names, description="[bold cyan]Converting : [/bold cyan]"):
		mimestart = get_mime(file)

		if mimestart != None:
			if mimestart in ['audio']:
				filename, _ = get_filename_extension(file)
				filename = filename +'.ogg'

				print(f"[green]{filename}")

				if !(ffmpeg -i @(file) -c:a libvorbis -b:a @(bitrate)k -vn f"{filename}"):
					None
				else:
					print(f"[bold red]Unable to convert {file}[/bold red]")
					sound-play-fail &

	sound-play-success &
else:
	console.print("No files selected!", style="bold red")
	sound-play-fail &

console.rule(style="cyan")
