#!/usr/bin/env xonsh
import os
import sys
from datetime import datetime

"""
Note: Using mkvmerge to merge files will not re-encode them, so the operation will be fast and lossless. However, this also means that all input files must have the same codecs for the operation to work. If you're trying to merge files with different codecs, you'll first need to re-encode them to use the same codecs. You can do this with a tool like ffmpeg.
"""

myhome = os.path.expanduser('~')
sys.path.append(f"{myhome}/Bin")

from utilities import (get_mime, 
                       get_filename_extension, 
                       handle_original_file, 
                       get_user_selection)

from rich.console import Console
console = Console()

console.rule(f"[bold cyan]Combining Media...", style="cyan")

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) > 1:
    selection = True

if selection:
    allFiles = sys.argv[1:]
    allFiles.sort()    

    media_files_list = []

    for file in allFiles:
        mimestart = get_mime(file)
        if mimestart != None:
            if mimestart in ['audio', 'video']:
                media_files_list.append(file)
    
    if media_files_list:
        delete_choice = get_user_selection(["No", "Yes"], "Delete original files after processing?")
        
        date_time = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
        _, extension = get_filename_extension(media_files_list[0])  
        mimestart = get_mime(media_files_list[0])
        
        if (mimestart == 'audio') or (extension == ".mka"):
            extension = "mka"
        elif mimestart == 'video':
            extension = "mkv"

        output_file_name = f"combined_{date_time}.{extension}"

        # Add '+' to the start of all items except the first one
        input_files_list = [media_files_list[0]] + [f"+{file}" for file in media_files_list[1:]]

        mkvmerge -o @(output_file_name) @(input_files_list)

        for file in media_files_list:
            handle_original_file(file, delete_choice, "Media")

        audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Success.ogg &    
    else:
        console.print("No media files selected!", style="bold red")
        audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &

else:
    console.print("No files selected!", style="bold red")
    audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &

console.rule(style="cyan")
