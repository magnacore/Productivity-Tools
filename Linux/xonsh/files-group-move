#!/usr/bin/env xonsh

# No need to select individual files. Select all the files and run the script.
# All common files will be grouped and all uncommon files will be ignored.

import os
import shutil
from collections import defaultdict
import argparse

def longest_common_prefix(strs):
    """
    Function to find the longest common prefix in a list of strings
    """
    if not strs:
        return ""

    shortest_str = min(strs, key=len)
    for i, char in enumerate(shortest_str):
        for other in strs:
            if other[i] != char:
                return shortest_str[:i]
    return shortest_str

def move_files_based_on_prefix(file_paths):
    # Group files based on the prefix before the first digit or underscore
    file_groups = defaultdict(list)
    for file_path in file_paths:
        directory, file = os.path.split(file_path)
        # prefix = ''.join(char for char in file if not char.isdigit() and not char == '_')
        prefix = ''.join(char for char in file if not char.isdigit() and not char == '.')
        file_groups[(prefix, directory)].append(file)

    # For each group of files, find the longest common prefix and move the files into that folder
    for (prefix, directory), group in file_groups.items():
        common_prefix = longest_common_prefix(group)
        folder_path = os.path.join(directory, common_prefix)

        if len(group) > 1:
            os.makedirs(folder_path, exist_ok=True)
            for file in group:
                shutil.move(os.path.join(directory, file), folder_path)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Move files based on common prefix.')
    parser.add_argument('files', metavar='F', type=str, nargs='+',
                        help='a list of file paths to process')

    args = parser.parse_args()
    move_files_based_on_prefix(args.files)
