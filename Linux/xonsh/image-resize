#!/usr/bin/env xonsh
from rich.progress import track
from rich.console import Console
from rich import print

import sys
import os
myhome = os.path.expanduser('~')
sys.path.append(f"{myhome}/Bin")

from utilities import get_mime, get_filename_extension, set_valid_file_names

console = Console()

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) >= 3:
	selection = True
	resize_dimension = int(sys.argv[1])

if selection:
	allFiles = sys.argv[2:]
	allFiles.sort()	

	if resize_dimension > 0:
		console.rule(f"[bold cyan]Changing images dimension to {resize_dimension}p...", style="cyan")
	else:
		console.rule("[bold cyan]Converting images to webp format....", style="cyan")

	clean_file_names = set_valid_file_names(allFiles)

	for image in track(clean_file_names, description="[bold cyan]Converting : [/bold cyan]"):
		mimestart = get_mime(image)

		if mimestart != None:
			if mimestart in ['image']:
				file_name, extension = get_filename_extension(image)
				extension = extension.lower().strip()

				new_filename = file_name

				if resize_dimension > 0 and extension != ".gif":
					new_filename = new_filename + f"_{resize_dimension}p"

				if extension == ".webp":
					new_filename = new_filename + "_converted"

				new_filename = new_filename + ".webp"

				# unlike console, print scrolls above the progress bar
				# and does not obstruct it
				print(f"[green]{new_filename}")

				if extension == ".jpg" or extension == ".jpeg":
					if !(cwebp -metadata all -quiet -resize 0 @(resize_dimension) @(image) -o @(new_filename)):
						trash-put @(image)
					else:
						print(f"[bold red]Unable to convert {image}[/bold red]")
						audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &
				elif extension == ".gif":
					if !(gif2webp -metadata all -quiet @(image) -o @(new_filename)):
						trash-put @(image)
					else:
						print(f"[bold red]Unable to convert {image}[/bold red]")
						audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &
				elif extension == ".webp" and resize_dimension == 0:
						print(f"[bold red]Skipping converting webp to webp with no change in dimension.[/bold red]")
				else:
					if !(cwebp -metadata all -quiet -lossless -exact -resize 0 @(resize_dimension) @(image) -o @(new_filename)):
						trash-put @(image)
					else:
						print(f"[bold red]Unable to convert {image}[/bold red]")
						audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &

	audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Success.ogg &
else:
	console.print("No files selected!", style="bold red")
	audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &

console.rule(style="cyan")
