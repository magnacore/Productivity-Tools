#!/home/manuj/anaconda3/envs/xonsh/bin/xonsh
import os

from rich.progress import track
from rich.console import Console

import sys
sys.path.append("/home/manuj/Bin")

from utilities import get_mime, get_filename_extension

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) >= 3:
	selection = True
	resize_dimension = int(sys.argv[1])

if selection:
	allMediaFiles = sys.argv[2:]
	allMediaFiles.sort()

	console = Console()

	if resize_dimension > 0:
		console.rule(f"[bold cyan]Changing image(s) dimension to {resize_dimension}p...", style="cyan")
	else:
		console.rule("[bold cyan]Converting image(s) to webp format....", style="cyan")

	for media in track(allMediaFiles, description="[bold cyan]Converting : [/bold cyan]"):
		mimestart = get_mime(media)

		if mimestart != None:
			if mimestart in ['image']:
				file_name, extension = get_filename_extension(media)
				extension = extension.lower().strip()

				if resize_dimension > 0:
					new_filename = f"{file_name}_{resize_dimension}p.webp"
				else:
					new_filename = f"{file_name}.webp"

				if extension == ".jpg" or extension == ".jpeg":
					if !(cwebp -metadata all -quiet -resize 0 @(resize_dimension) @(media) -o @(new_filename)):
						trash-put @(media)
					else:
						console.print(f"Unable to convert {media}", style="bold red")
						sound-play-fail &
				else:
					if !(cwebp -metadata all -quiet -lossless -exact -resize 0 @(resize_dimension) @(media) -o @(new_filename)):
						trash-put @(media)
					else:
						console.print(f"Unable to convert {media}", style="bold red")
						sound-play-fail &

	sound-play-success &
else:
	console.print("No files selected!", style="bold red")
	sound-play-fail &

console.rule(style="cyan")
