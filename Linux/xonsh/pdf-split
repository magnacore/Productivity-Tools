#!/usr/bin/env xonsh

from rich.console import Console
from rich.progress import Progress
from PyPDF2 import PdfReader, PdfWriter

import sys
import os
myhome = os.path.expanduser('~')
sys.path.append(f"{myhome}/Bin")

from utilities import get_mime, get_filename_extension, get_user_selection

console = Console()

split_after_page = ['1', '80', '10', 'Custom']

# sys.argv[0] is the name of the script which will always be there
selection = False

if len(sys.argv) >= 3:
	selection = True

if selection:
	allFiles = sys.argv[2:]
	split_page = int(sys.argv[1])
	allFiles.sort()

	choice = get_user_selection(split_after_page, "Each part will contain how many pages?")

	if choice == '1':
		split_page = 1
	elif choice == '80':
		split_page = 80
	elif choice == '10':
		split_page = 10
	elif choice == 'Custom':
		split_page = int(input("Each part will contain how many pages? "))
		if split_page < 1:
			split_page = 1

	console.rule(f"[bold cyan]Splitting PDFs to {split_page} pages each...")


	with Progress() as progress:

		overall_progress = progress.add_task(f"[bold cyan]Splitting {len(allFiles)} PDF(s)...", total=len(allFiles))

		while not progress.finished:

			for fname in allFiles:				

				mimestart = get_mime(fname, 1)

				if mimestart != None:
					
					if mimestart in ['pdf']:

						file_name, _ = get_filename_extension(fname)

						pdf = PdfReader(fname)

						pdf_writer = PdfWriter()

						total_pages = len(pdf.pages)

						part = 1
						countdown = total_pages						

						individual_progress = progress.add_task(f"[bold cyan]Splitting {fname}: [/bold cyan]", total=total_pages)

						for page in range(total_pages):
							pdf_writer.add_page(pdf.pages[page])
							progress.update(individual_progress, advance=1)

							# if pdf_writer contains split_page pages OR we are on the last page
							if (len(pdf_writer.pages) == split_page) or (page+1 == total_pages):

								page_percent = int(((page + 1) / total_pages) * 100)

								output_filename = f"{file_name}-{str(part).zfill(4)}-{str(countdown).zfill(4)}r-{str(page_percent).zfill(3)}p.pdf"

								with open(output_filename, 'wb') as out:
									pdf_writer.write(out)
									part += 1
									countdown -= split_page

								pdf_writer = PdfWriter()
						
						progress.remove_task(individual_progress)

				progress.update(overall_progress, advance=1)

	audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Success.ogg &

else:
	console.print(f"[bold red]No file selected...exiting.")
	audio-play ~/Bin/oxygen-sound-theme/Oxygen-K3B-Finish-Error.ogg &

console.rule(style="cyan")
